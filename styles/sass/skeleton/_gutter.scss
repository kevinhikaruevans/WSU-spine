@charset "UTF-8";
@mixin gutter($whole,$halve) {

$gutters: (
	'': 2rem,
	'.wide': 4rem,
	'.narrow': 1rem
	);

@each $gutter, $dividend in $gutters {

	/* #{$gutter} */

	.gutter#{$gutter} .column,
	.guttered#{$gutter} {
		padding-left: $dividend;
		padding-right: $dividend; }
		
	}
	
$spacing: (
	'loose': 4rem,
	'tight': 1rem
	);

@each $space, $dividend in $spacing {
	
	.spacing-#{$space} .gutter .colum,
	.spacing-#{$space} .guttered {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$whole; }
	
	// One Column
	.spacing-#{$space} .single.gutter .column {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$whole; }
	
	// Two Columns
	.spacing-#{$space} .halves.gutter .column.one,
	.spacing-#{$space} .halves.gutter .column:nth-of-type(2n+3),
	.spacing-#{$space} .side-left.gutter .column.one,
	.spacing-#{$space} .side-right.gutter .column.one,
	.spacing-#{$space} .margin-left.gutter .column.one,
	.spacing-#{$space} .margin-right.gutter .column.one {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$halve;
		}
	.spacing-#{$space} .halves.gutter .column.two,
	.spacing-#{$space} .halves.gutter .column:nth-of-type(2n+4),
	.spacing-#{$space} .side-left.gutter .column.two,
	.spacing-#{$space} .side-right.gutter .column.two,
	.spacing-#{$space} .margin-left.gutter .column.two,
	.spacing-#{$space} .margin-right.gutter .column.two {
		padding-left: ($dividend/$halve);
		padding-right: $dividend/$whole;
		}
	
	// Three Columns
	.spacing-#{$space} .thirds.gutter .column.one,
	.spacing-#{$space} .thirds.gutter .column:nth-of-type(3n+4),
	.spacing-#{$space} .triptych.gutter .column.one {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$halve;
		}
	.spacing-#{$space} .thirds.gutter .column.two,
	.spacing-#{$space} .thirds.gutter .column:nth-of-type(3n+5),
	.spacing-#{$space} .triptych.gutter .column.two {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$halve;
		}
	.spacing-#{$space} .thirds.gutter .column.three,
	.spacing-#{$space} .thirds.gutter .column:nth-of-type(3n+6),
	.spacing-#{$space} .triptych.gutter .column.three {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$whole;
		}
		
	// Four Columns
	.spacing-#{$space} .quarters.gutter .column.one,
	.spacing-#{$space} .quarters.gutter .column:nth-of-type(4n+5) {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$halve;
		}
	.spacing-#{$space} .quarters.gutter .column.two,
	.spacing-#{$space} .quarters.gutter .column.three,
	.spacing-#{$space} .quarters.gutter .column:nth-of-type(4n+6),
	.spacing-#{$space} .quarters.gutter .column:nth-of-type(4n+7) {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$halve;
		}
	.spacing-#{$space} .quarters.gutter .column.four,
	.spacing-#{$space} .quarters.gutter .column:nth-of-type(4n+8) {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$whole;
		}
		
	}
	
@each $gutter, $dividend in $gutters {
	
	// One Column
	.single.gutter#{$gutter} .column {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$whole; }
	
	// Two Columns
	.halves.gutter#{$gutter} .column.one,
	.halves.gutter#{$gutter} .column:nth-of-type(2n+3),
	.side-left.gutter#{$gutter} .column.one,
	.side-right.gutter#{$gutter} .column.one {
		padding-left: $dividend/$whole;
		padding-right: ($dividend/$halve);
		}
	.halves.gutter#{$gutter} .column.two,
	.halves.gutter#{$gutter} .column:nth-of-type(2n+4),
	.side-left.gutter#{$gutter} .column.two,
	.side-right.gutter#{$gutter} .column.two {
		padding-left: ($dividend/$halve);
		padding-right: $dividend/$whole;
		}
	
	// Three Columns
	.thirds.gutter#{$gutter} .column.one,
	.thirds.gutter#{$gutter} .column:nth-of-type(3n+4),
	.triptych.gutter#{$gutter} .column.one {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$halve;
		}
	.thirds.gutter#{$gutter} .column.two,
	.thirds.gutter#{$gutter} .column:nth-of-type(3n+5),
	.triptych.gutter#{$gutter} .column.two {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$halve;
		}
	.thirds.gutter#{$gutter} .column.three,
	.thirds.gutter#{$gutter} .column:nth-of-type(3n+6),
	.triptych.gutter#{$gutter} .column.three {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$whole;
		}
	
	// Four Columns
	.quarters.gutter#{$gutter} .column.one,
	.quarters.gutter#{$gutter} .column:nth-of-type(4n+5) {
		padding-left: $dividend/$whole;
		padding-right: $dividend/$halve;
		}
	.quarters.gutter#{$gutter} .column.two,
	.quarters.gutter#{$gutter} .column.three,
	.quarters.gutter#{$gutter} .column:nth-of-type(4n+6),
	.quarters.gutter#{$gutter} .column:nth-of-type(4n+7) {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$halve;
		}
	.quarters.gutter#{$gutter} .column.four,
	.quarters.gutter#{$gutter} .column:nth-of-type(4n+8) {
		padding-left: $dividend/$halve;
		padding-right: $dividend/$whole;
		}
		
	}
	
	.gutterless {
		padding-left: 0px !important;
		padding-right: 0px !important;
		}
	
	/*
		.fifths.gutter .column { padding: 1em; }
		.fifths.gutter .column:nth-of-type(5n+1) { padding-left: 2em; }
		.fifths.gutter .column:nth-of-type(5n+5) { padding-right: 2em; }
	*/

	}